import {AwingIWSEquipmentOMAssetStatus,AwingIWSPMFileDto} from '../type';
import request from "@/requests/interface";
import { useGlobalSettingStore } from "@/store";
const ismock = useGlobalSettingStore().isMock;

const GetList = (data:{EquipmentCode?:string;EquipmentName?:string;EquipmentTypeId?:string;BrandName?:string;ModelName?:string;BuyTime_Start?:string;BuyTime_End?:string;AssetStatus?:0|1|2;IsActive?:boolean;SkipCount?:number;MaxResultCount?:number;})=> {return request({url: "/IWS/equipment-info",method:"get",ownMethod: "undefined",params: data,baseURL:ismock ?"/mock": undefined})};
const Export = (data:{EquipmentCode?:string;EquipmentName?:string;EquipmentTypeId?:string;BrandName?:string;ModelName?:string;BuyTime_Start?:string;BuyTime_End?:string;AssetStatus?:0|1|2;IsActive?:boolean;SkipCount?:number;MaxResultCount?:number;})=> {return request({url: "/IWS/equipment-info/export",method:"get",ownMethod: "undefined",params: data,baseURL:ismock ?"/mock": undefined})};
const GetKPIList = ()=> {return request({url: "/IWS/equipment-info/k-pIList",method:"get",ownMethod: "undefined",baseURL:ismock ?"/mock": undefined})};
const SetKPI = ()=> {return request({url: "/IWS/equipment-info/set-kPI",method:"post",ownMethod: "undefined",baseURL:ismock ?"/mock": undefined})};
const UpdateActive = (data:{id:string;_params:{active?:boolean;};})=> {return request({url: "/IWS/equipment-info/"+data.id+"/active",method:"put",ownMethod: "undefined",params: data._params,baseURL:ismock ?"/mock": undefined})};
const Create = (data:{equipmentName:string;equipmentTypeId:string;brandId?:string;brandModelId?:string;position?:string;installationTime?:string;dealerId?:string;buyTime?:string;assetStatus:AwingIWSEquipmentOMAssetStatus;assetStatusDescription?:string;assetValue?:number;bimModelId?:string;bimModelElementId?:number;gisModelId?:string;gisModelElementId?:number;longitude?:number;latitude?:number;filesList?:Array<AwingIWSPMFileDto>;[key: string]: unknown;})=> {return request({url: "/IWS/equipment-info",method:"post",ownMethod: "body",data: data,baseURL:ismock ?"/mock": undefined})};
const Update = (data:{id:string;_body:{equipmentName:string;equipmentTypeId:string;brandId?:string;brandModelId?:string;position?:string;installationTime?:string;dealerId?:string;buyTime?:string;assetStatus:AwingIWSEquipmentOMAssetStatus;assetStatusDescription?:string;assetValue?:number;bimModelId?:string;bimModelElementId?:number;gisModelId?:string;gisModelElementId?:number;longitude?:number;latitude?:number;filesList?:Array<AwingIWSPMFileDto>;concurrencyStamp?:string;[key: string]: unknown;}})=> {return request({url: "/IWS/equipment-info/"+data.id,method:"put",ownMethod: "undefined",data: data._body,baseURL:ismock ?"/mock": undefined})};
const Delete = (data:{id:string;})=> {return request({url: "/IWS/equipment-info/"+data.id,method:"delete",ownMethod: "undefined",baseURL:ismock ?"/mock": undefined})};
const Get = (data:{id:string;})=> {return request({url: "/IWS/equipment-info/"+data.id,method:"get",ownMethod: "undefined",baseURL:ismock ?"/mock": undefined})};
const GetRepairedRecordList = (data:{id:string;_params:{OrderSource?:1|2|3|4;RepairCode?:string;RepairRespName?:string;OrderStartTime_Start?:string;OrderStartTime_End?:string;OrderEndTime_Start?:string;OrderEndTime_End?:string;OrderStatus?:1|2|3|4|5|6|7|8|9;SkipCount?:number;MaxResultCount?:number;};})=> {return request({url: "/IWS/equipment-info/"+data.id+"/repaired-record-list",method:"get",ownMethod: "undefined",params: data._params,baseURL:ismock ?"/mock": undefined})};
const GetInspectionRecordList = (data:{id:string;_params:{TaskCode?:string;TaskName?:string;Position?:string;RespName?:string;StartDate?:string;EndDate?:string;TaskStatus?:0|1|2|3;TaskResult?:boolean;SkipCount?:number;MaxResultCount?:number;};})=> {return request({url: "/IWS/equipment-info/"+data.id+"/inspection-record-list",method:"get",ownMethod: "undefined",params: data._params,baseURL:ismock ?"/mock": undefined})};
const GetMaintainRecordList = (data:{id:string;_params:{TaskCode?:string;EquipmentCode?:string;MaintainCategory?:1|2|3;RespName?:string;TaskStartTime?:string;TaskEndTime?:string;Status?:0|1|2|3;SkipCount?:number;MaxResultCount?:number;};})=> {return request({url: "/IWS/equipment-info/"+data.id+"/maintain-record-list",method:"get",ownMethod: "undefined",params: data._params,baseURL:ismock ?"/mock": undefined})};
const GetAssetStatusRecordList = (data:{id:string;_params:{CreationTime_Start?:string;CreationTime_End?:string;AssetStatus?:0|1|2;SkipCount?:number;MaxResultCount?:number;};})=> {return request({url: "/IWS/equipment-info/"+data.id+"/asset-status-record-list",method:"get",ownMethod: "undefined",params: data._params,baseURL:ismock ?"/mock": undefined})};

const apis = {GetList,Export,GetKPIList,SetKPI,UpdateActive,Create,Update,Delete,Get,GetRepairedRecordList,GetInspectionRecordList,GetMaintainRecordList,GetAssetStatusRecordList};
export default apis;